{"version":3,"file":"login.component.js","sourceRoot":"","sources":["file:///C:/Users/funny/Documents/GitHub/dashboard/tmp/broccoli_type_script_compiler-input_base_path-SMUEtNaR.tmp/0/src/app/login/login.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFire, AuthProviders, AuthMethods } from 'angularfire2';\r\nimport { GlobalService } from '../shared/global.service';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  // selector: 'app-login',\r\n  templateUrl: 'login.component.html',\r\n  styleUrls: ['login.component.css']\r\n})\r\n\r\nexport class LoginComponent {\r\n  error = [];\r\n  regerror = [];\r\n  reg = false;\r\n  logUser: Object = {\r\n    log_email: '',\r\n    log_password: ''\r\n  };\r\n  regUser: Object = {\r\n    email: '',\r\n    username: '',\r\n    password: '',\r\n    repassword: ''\r\n  };\r\n\r\n  constructor(public af: AngularFire, private router:Router, private globalService: GlobalService) {\r\n  }\r\n\r\n  regFormValid() {\r\n    var re = /[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}/igm;\r\n    this.regerror = [];\r\n    if (this.regUser['email']=='') {\r\n      this.regerror.push('Please enter your email.');\r\n    }\r\n    else if (!re.test(this.regUser['email'])) {\r\n      this.regerror.push('Please enter a valid email.');\r\n    }\r\n    if (this.regUser['username']=='') {\r\n      this.regerror.push('Please enter your username');\r\n    }\r\n    if (this.regUser['password']=='') {\r\n      this.regerror.push('Please enter your password.');\r\n    }\r\n    else if (this.regUser['password'].length>16 || this.regUser['password'].length<8) {\r\n      this.regerror.push('You password should have 8-16 characters.');\r\n    }\r\n    if (this.regUser['repassword']!=this.regUser['password']) {\r\n      this.regerror.push(\"You password don't match.\");\r\n    }\r\n  }\r\n\r\n  login() {\r\n    this.af.auth.login({\r\n      email: this.logUser['log_email'],\r\n      password: this.logUser['log_password']\r\n    }, {\r\n      provider: AuthProviders.Password,\r\n      method: AuthMethods.Password,\r\n    })\r\n      .then((auth) => {\r\n        console.log(auth.uid);\r\n        this.error = [];\r\n        localStorage.setItem('uid', auth.uid);\r\n        this.router.navigate(['/page']);\r\n    }).catch((error) => {\r\n      this.error = [];\r\n      this.error.push(error.message);\r\n    });\r\n  }\r\n\r\n  googleLogin(credentials) {\r\n    this.af.auth.login({\r\n      provider: AuthProviders.Google,\r\n      method: AuthMethods.Popup,\r\n    })\r\n      .then((auth) => {\r\n        console.log(auth.uid);\r\n        this.error = [];\r\n        localStorage.setItem('uid', auth.uid);\r\n        this.router.navigate(['/page']);\r\n    }).catch((error) => {\r\n      this.error = [];\r\n      this.error.push(error.message);\r\n    });\r\n  }\r\n\r\n  register() {\r\n    this.reg = !this.reg;\r\n  }\r\n\r\n  loginValid() {\r\n    this.error = [];\r\n  }\r\n\r\n  registerValid() {\r\n    this.af.auth.createUser({\r\n      email: this.regUser['email'],\r\n      password: this.regUser['password']\r\n    })\r\n      .then((auth) => {\r\n        this.af.database.object('private/'+auth.uid).set({\r\n          username: this.regUser['username']\r\n        });\r\n        this.error = [];\r\n        localStorage.setItem('uid', auth.uid);\r\n        this.router.navigate(['/page']);\r\n    }).catch((error) => {\r\n      this.regerror = [];\r\n      this.regerror.push(error);\r\n    });\r\n  }\r\n}\r\n"]}
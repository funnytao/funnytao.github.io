{"version":3,"file":"dashboard.component.js","sourceRoot":"","sources":["file:///C:/Users/funny/Documents/GitHub/dashboard/tmp/broccoli_type_script_compiler-input_base_path-SMUEtNaR.tmp/0/src/app/dashboard/dashboard.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, AfterViewInit, ElementRef } from '@angular/core';\nimport { AngularFire, FirebaseListObservable } from 'angularfire2';\nimport { GlobalService } from '../shared/global.service';\nimport { CustomerChartComponent } from '../customer-chart/customer-chart.component';\nimport { IssueChartComponent } from '../issue-chart/issue-chart.component';\nimport { Router, ROUTER_DIRECTIVES } from '@angular/router';\ndeclare var jQuery: any;\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-dashboard',\n  templateUrl: 'dashboard.component.html',\n  styleUrls: ['dashboard.component.css'],\n  directives: [ CustomerChartComponent, IssueChartComponent ],\n})\nexport class DashboardComponent implements AfterViewInit {\n\n  item: FirebaseListObservable<any>;\n  toggle: boolean;\n  constructor(public af: AngularFire, private _elRef: ElementRef, private globalService: GlobalService, private router: Router) {\n    if (localStorage.getItem('uid')=='null' || localStorage.getItem('uid')=='') {\n      localStorage.setItem('uid', '');\n      this.router.navigate(['/login']);\n      console.log('redirectd');\n    }\n\n    this.item = af.database.list('shared/employee-map');\n  }\n\n  renderMap(item:any) {\n    var mapData = item;\n    delete mapData.$key;\n    jQuery('#world-map').empty();\n    jQuery('#world-map').vectorMap({\n      map: 'world_mill',\n      backgroundColor: '#fff',\n      regionStyle: { initial: { fill: '#000000' } },\n      series: {\n        regions: [{\n          values: item,\n          scale: ['#00a6f1', '#003c58'],\n          normalizeFunction: 'polynomial',\n          attribute: 'fill',\n        }]\n      },\n      onRegionTipShow: function(e, el, code){\n        el.html(el.html()+' (Employee - '+item[code]+')');\n      }\n    });\n  }\n\n  ngAfterViewInit():any {\n    this.af.database.object('shared/employee-map').subscribe(item=> {\n      this.renderMap(item);\n    });\n    var clock = jQuery('.your-clock').FlipClock({\n    // ... your options here\n    });\n    var currentTime = (new Date().getHours()*60+new Date().getMinutes())*60+new Date().getSeconds();\n    clock.setTime(currentTime);\n  }\n\n}\n"]}
{"version":3,"file":"customer-chart.component.js","sourceRoot":"","sources":["file:///C:/Users/funny/Documents/GitHub/dashboard/tmp/broccoli_type_script_compiler-input_base_path-SMUEtNaR.tmp/0/src/app/customer-chart/customer-chart.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {CORE_DIRECTIVES, FORM_DIRECTIVES, NgClass} from '@angular/common';\nimport { AngularFire, FirebaseListObservable } from 'angularfire2';\n\nimport {CHART_DIRECTIVES} from 'ng2-charts/ng2-charts';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-customer-chart',\n  templateUrl: 'customer-chart.component.html',\n  styleUrls: ['customer-chart.component.css'],\n  directives: [CHART_DIRECTIVES, NgClass, CORE_DIRECTIVES, FORM_DIRECTIVES]\n})\nexport class CustomerChartComponent implements OnInit {\n\n  constructor(public af: AngularFire) {\n    af.database.object('shared/customer-chart').subscribe(item=> {\n      var labels = [];\n      var data = [];\n      for (var i in item) {\n        if (i!='$key') {\n          labels.push(i+'');\n          data.push(item[i]);\n        }\n      }\n      this.lineChartLabels = labels;\n      this.lineChartData[0].data = data;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  // lineChart\n  public lineChartData:Array<any> = [\n    {data: [], label:'Paying Customers'}\n  ];\n  public lineChartLabels:Array<any> = [];\n  public lineChartOptions:any = {\n    animation: false,\n    responsive: true\n  };\n  public lineChartColours:Array<any> = [\n    { // grey\n      backgroundColor: 'rgba(51,65,78,0.8)',\n      borderColor: 'rgba(51,65,78,1)',\n      pointBackgroundColor: 'rgba(51,65,78,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(51,65,78,0.8)'\n    }\n  ];\n  public lineChartLegend:boolean = true;\n  public lineChartType:string = 'line';\n\n  public randomize():void {\n    let _lineChartData:Array<any> = new Array(this.lineChartData.length);\n    for (let i = 0; i < this.lineChartData.length; i++) {\n      _lineChartData[i] = {data: new Array(this.lineChartData[i].data.length), label: this.lineChartData[i].label};\n      for (let j = 0; j < this.lineChartData[i].data.length; j++) {\n        _lineChartData[i].data[j] = Math.floor((Math.random() * 100) + 1);\n      }\n    }\n    this.lineChartData = _lineChartData;\n  }\n\n  // events\n  public chartClicked(e:any):void {\n    console.log(e);\n  }\n\n  public chartHovered(e:any):void {\n    console.log(e);\n  }\n\n}\n"]}